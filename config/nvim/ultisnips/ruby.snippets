################################################################################
# Ruby snippets
################################################################################

extends capybara
extends climatecontrol
extends factorybot
extends minitest
extends rspec
extends vcr

snippet @
@${1} = $1
endsnippet

snippet . "block"
{ ${0} }
endsnippet

snippet aa "attr accessor"
attr_accessor :${0}
endsnippet

snippet ar "attr reader"
attr_reader :${0}
endsnippet

snippet aw "attr writer"
attr_writer :${0}
endsnippet

snippet bm "benchmark"
require 'benchmark'
Benchmark.bm do |bm|
	bm.report('${0}') do
	end
end
endsnippet

snippet case "case statement"
case ${0}
when
else
end
endsnippet

snippet caa "class attr accesor"
cattr_accessor :${0}
endsnippet

snippet car "class attr reader"
cattr_reader :${0}
endsnippet

snippet caw "class attr writer"
cattr_writer :${0}
endsnippet

snippet cl "class"
class ${0}
end
endsnippet

snippet hdoc "heredoc"
<<~${1}
	${0}
$1
endsnippet

snippet init "initialize"
def initialize(${0})
end
endsnippet


snippet mod "module"
module ${0}
end
endsnippet

snippet objsize "object size in memory"
require "objspace"
ObjectSpace.memsize_of(${0})
endsnippet

snippet rq "require"
require "${0}"
endsnippet

snippet rqr "require relative"
require_relative "${0}"
endsnippet

snippet smm "Show me methods"
${0}.instance_methods - Object.instance_methods
endsnippet


snippet lda "lambda"
->(${0}) do
end
endsnippet

################################################################################
# Debugging
################################################################################

snippet bb "byebug"
byebug
endsnippet

snippet bp "binding.pry"
binding.pry
endsnippet

snippet brp "remote pry"
binding.remote_pry
endsnippet

snippet db "debugger"
debugger
endsnippet

snippet roof "Raise the roof!"
raise "roof"
endsnippet

snippet ri "Raise inspect"
raise "#{${0}.inspect}"
endsnippet
